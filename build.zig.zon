.{
    .name = "wgpu-native-zig",
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        // See `zig fetch --save <url>` for a command-line interface for adding dependencies.
        //.example = .{
        //    // When updating this field to a new URL, be sure to delete the corresponding
        //    // `hash`, otherwise you are communicating that you expect to find the old hash at
        //    // the new URL.
        //    .url = "https://example.com/foo.tar.gz",
        //
        //    // This is computed from the file contents of the directory of files that is
        //    // obtained after fetching `url` and applying the inclusion rules given by
        //    // `paths`.
        //    //
        //    // This field is the source of truth; packages do not come from a `url`; they
        //    // come from a `hash`. `url` is just one of many possible mirrors for how to
        //    // obtain a package matching this `hash`.
        //    //
        //    // Uses the [multihash](https://multiformats.io/multihash/) format.
        //    .hash = "...",
        //
        //    // When this is provided, the package is found in a directory relative to the
        //    // build root. In this case the package's hash is irrelevant and therefore not
        //    // computed. This field and `url` are mutually exclusive.
        //    .path = "foo",

        //    // When this is set to `true`, a package is declared to be lazily
        //    // fetched. This makes the dependency only get fetched if it is
        //    // actually used.
        //    .lazy = false,
        //},
        .wgpu_linux_aarch64_debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-linux-aarch64-debug.zip",
            .hash = "1220ff6a097baacff09442f6f4a19f9db62cf55a266dc9a35045a6df94fe3dc910bb",
            .lazy = true,
        },
        .wgpu_linux_aarch64_release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-linux-aarch64-release.zip",
            .hash = "1220e329ad53c8d971babf4555aee332595d5a26154e43bbc7e7c6a90bf3b7c4d73a",
            .lazy = true,
        },
        .wgpu_linux_x86_64_debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-linux-x86_64-debug.zip",
            .hash = "1220ef2a0bf24558c66bb89c31065459423c2be50273785affd671245629d2f4a448",
            .lazy = true,
        },
        .wgpu_linux_x86_64_release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-linux-x86_64-release.zip",
            .hash = "12202d55660b2b66a8cf0ae68cb5ac294e93b9b048099f77f5f09987c61091a579a8",
            .lazy = true,
        },
        .wgpu_macos_aarch64_debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-macos-aarch64-debug.zip",
            .hash = "12209db4f886436958ef2b74186189e69c2020e3dad4a9397eea58c4ff75f2f1e460",
            .lazy = true,
        },
        .wgpu_macos_aarch64_release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-macos-aarch64-release.zip",
            .hash = "1220aa5c0ca2feb2ec5159623b4a50e0ab33add2eee329ffd922773e3952f4e46568",
            .lazy = true,
        },
        .wgpu_macos_x86_64_debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-macos-x86_64-debug.zip",
            .hash = "122021723e9887d700e1852830ad12b79debc964a9f789b6e79701105c36f5d5ce44",
            .lazy = true,
        },
        .wgpu_macos_x86_64_release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-macos-x86_64-release.zip",
            .hash = "1220fe8168bcc47892ef649c2a525635ec9fd932ac2998d5503d38cc552c4cd89698",
            .lazy = true,
        },
        .wgpu_windows_x86_debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-windows-i686-msvc-debug.zip",
            .hash = "12203fa82a10a766113436fb5cd1f4b06fde94513ba7d3d64ad7379165d36f1c1227",
            .lazy = true,
        },
        .wgpu_windows_x86_release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-windows-i686-msvc-release.zip",
            .hash = "122013d802ceafb603ef5d8a2c9e4476a91c4942b5ee0d61eb2774f55f2a610571de",
            .lazy = true,
        },
        .wgpu_windows_x86_64_debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-windows-x86_64-msvc-debug.zip",
            .hash = "1220ae3fe30c92e29984348977a8f4c38fb0438df5bd6f232d281e7a8ae679d30b0a",
            .lazy = true,
        },
        .wgpu_windows_x86_64_release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v22.1.0.5/wgpu-windows-x86_64-msvc-release.zip",
            .hash = "122023484ded962d6afd920586c51eb3a950a6ead9afd7fbf327b36f71436d82bfaa",
            .lazy = true,
        },
    },

    // Specifies the set of files and directories that are included in this package.
    // Only files and directories listed here are included in the `hash` that
    // is computed for this package. Only files listed here will remain on disk
    // when using the zig package manager. As a rule of thumb, one should list
    // files required for compilation plus any license(s).
    // Paths are relative to the build root. Use the empty string (`""`) to refer to
    // the build root itself.
    // A directory listed here means that all files within, recursively, are included.
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
